---
layout: post
comments: true
title: What Is Travis CI?
description: In this devops tutorial, I will talk about a different CI other than jenkins that is called travis ci.I will explain what is it, how to download and setup it on github.
ids: 7
category: DevOps
---

<p class="message"> 
Travis CI is a continuous integration service that is used mostly in Github. It also provides free plan for open source projects. Also it is a hosted service, which means you don't have to host your own server unlike jenkins.
</p>

<img data-sizes="auto" class="lazy-loading" data-src="/assets/images/rsz_travis.jpg" src="/assets/images/rsz_travis.jpg" alt="travis ci logo" data-srcset="/assets/images/rsz_travis.jpg 300w,
    /assets/images/rsz_travis.jpg 600w,
    /assets/images/rsz_travis.jpg 900w">

*Note: This tutorial is mostly an explanation how to use Travis CI, if you want to learn what continuous integration and Continuous Delivery are, then check the tutorial before [What does Jenkins do?](https://petercoding.com/devops/2019/07/15/what-does-jenkins-do/)*

## Setup Travis CI

It is very simple to setup travis in your open source project. First you need to navigate to the following website [Travis CI](https://travis-ci.org). Then sign in using your github account and give travis ci authorization. You will be presented with the following page:

<img data-sizes="auto" class="lazy-loading" data-src="/assets/images/rsz_travis.jpg" src="/assets/images/travishome.jpg" alt="travis ci home" data-srcset="/assets/images/travishome.jpg 300w,
    /assets/images/travishome.jpg 600w,
    /assets/images/travishome.jpg 900w">

In that page, you can find all your repositories at Github. You can then activate any repository to be used in travis ci. First click on a repository and then click on *activate button* so it can be used inside of travis ci.

<img data-sizes="auto" class="lazy-loading" data-src="/assets/images/activate.jpg" src="/assets/images/activate.jpg" alt="activate travis ci" data-srcset="/assets/images/activate.jpg 300w,
    /assets/images/activate.jpg 600w,
    /assets/images/activate.jpg 900w">

Then to activate travis ci on every commit in the repository, you need to create a configuration file and call it `.travis.yml`. Travis CI supports many programming languages, you can find the details of each langauge in the following link [Travis CI Docs](https://docs.travis-ci.com/). Now, since this is an ionic project, I will use the language `nodejs` inside the `.travis.yml` file. For example inside the `.travis.yml` you can write the following:

```
language: node_js
node_js:
  - 10.15.0

branches:
  only:
  - master
before_script:
  - npm install -g @angular/cli
script:
- ng lint
- ng build --prod
```

This will specify that `nodejs` is the language and that version 10.15.0 needs to be used. Also this will only check the master branch for any changes. The `before_script` is used to prevent any scripting running before installing `@angular/cli`. Then `ng lint` is executed and after `ng build --prod`.  Therefore, after executing `git push origin master`, travis ci will build the project. You can then access the logs of the builds by going to to travis ci. You will also recieve an email about the status of the build.

<img data-sizes="auto" class="lazy-loading" data-src="/assets/images/success.jpg" src="/assets/images/success.jpg" alt="travis ci build success" data-srcset="/assets/images/success.jpg 300w,
    /assets/images/success.jpg 600w,
    /assets/images/success.jpg 900w">

As you can see from the above screen, it successfully built the project.

**Note**: It is very important that the version specified in the `.travis.yml` file, should be the same as the `nodejs` version used locally.

One nice feature when using travis ci and github, is the automatic security fixes, so whenever you get the following dependency error:

<img data-sizes="auto" class="lazy-loading" data-src="/assets/images/security.jpg" src="/assets/images/security.jpg" alt="travis ci security " data-srcset="/assets/images/security.jpg 300w,
    /assets/images/security.jpg 600w,
    /assets/images/security.jpg 900w">

And when executing a build on travis ci, the "dependabot" will perform a pull request and update the dependencies that contain security vulnerabilities. You can learn more about the automatic security fixes in the following link [Configuring automated security fixes](https://help.github.com/en/articles/configuring-automated-security-fixes).

----

Also, if you click on the `build success` badge, then you can take the `markdown` and add it to the `readme` in your github repository.

<img data-sizes="auto" class="lazy-loading" data-src="/assets/images/badge.jpg" src="/assets/images/badge.jpg" alt="travis ci build badge" data-srcset="/assets/images/badge.jpg 300w,
    /assets/images/badge.jpg 600w,
    /assets/images/badge.jpg 900w">
